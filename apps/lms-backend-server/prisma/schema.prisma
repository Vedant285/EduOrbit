datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Enrollment {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model ModuleModel {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model Course {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model User {
  createdAt DateTime @default(now())
  email     String?  @unique
  firstName String?
  id        String   @id @default(cuid())
  lastName  String?
  likes     Like[]
  password  String
  roles     Json
  updatedAt DateTime @updatedAt
  username  String   @unique
}

model UserPreference {
  createdAt DateTime                 @default(now())
  id        String                   @id @default(cuid())
  theme     EnumUserPreferenceTheme?
  updatedAt DateTime                 @updatedAt
  userId    String?
}

model Post {
  author    String?
  comments  Comment[]
  content   String?
  createdAt DateTime  @default(now())
  id        String    @id @default(cuid())
  likes     Like[]
  title     String?
  updatedAt DateTime  @updatedAt
}

model Comment {
  author    String?
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  post      Post?    @relation(fields: [postId], references: [id])
  postId    String?
  text      String?
  updatedAt DateTime @updatedAt
}

model Like {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  post      Post?    @relation(fields: [postId], references: [id])
  postId    String?
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

enum EnumUserPreferenceTheme {
  Option1
}
